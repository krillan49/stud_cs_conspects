puts '                                             JSON'

# https://ru.wikipedia.org/wiki/JSON

# JSON (application/json) - (JS Object Notationд) универсальный формат хранения данных, более простой чем XML (так же меньше весит и соотв быстрее передается и обрабатывается), потому больше подходит, чтобы передать простые данные (список покупок в магазине, email пользователя, адрес сайта)

# JSON-объекты проще XML, но ими также можно описать очень сложные структуры данных при желании. Но обычно ветвление даже не идёт дальше второго уровня.

# По сути JSON-объект — это ассоциативный массив, записанный в файл по строгим правилам: набор пар ключ-значение, перечисленных через запятую, внутри фигурных скобок. Также в JSON можно хранить массив JSON-объектов.

# Ключом в JSON-файле может быть только строка, а значением может быть строка, число, булевский тип (true или false), другой JSON-объект или массив.

# JSON-объекты очень удобны тем, что в любом языке программирования, где есть ассоциативные массивы, их очень удобно использовать (и именно поэтому ассоциативные массивы так популярны)

# Пример JSON-представление объекта, описывающего человека. В объекте есть строковые поля имени и фамилии, объект, описывающий адрес и массив, содержащий список телефонов. Значение может представлять собой вложенную структуру.
{
  "firstName": "Иван",
  "lastName": "Иванов",
  "address": {
    "streetAddress": "Московское ш., 101, кв.101",
    "city": "Ленинград",
    "postalCode": 101101
  },
  "phoneNumbers": [
    "812 123-1234",
    "916 123-4567"
  ]
}

# Официально JSON не поддерживает комментарии, но есть несколько обходных путей:
# 1. Использование внешнего инструмента или препроцессора. Он удаляет комментарии перед анализом JSON
# 2. Включение комментариев как части самих данных JSON. Для этого к объектам JSON добавляют поля комментариев, которые обрабатываются как обычные пары ключ-значение. Например, ключи _comment.
















#
